version: '3'

vars:
  TERRAFORM_DIRS:
    sh: "find terraform -mindepth 1 -maxdepth 1 -type d -printf '%f\n'"
  ANSIBLE_DIRS:
    sh: "find ansible -mindepth 1 -maxdepth 1 -type d -printf '%f\n'"

tasks:

  update:
    desc: "Update toolings (gum, yq, jq, etc.)"
    cmds:
      - "echo 'Updating toolings...'"
      - "sudo apt update && sudo apt install -y jq yq gum"
      - "echo 'Tooling update completed.'"

  select-terraform:
    desc: "Select a Terraform folder"
    vars:
      SELECTED_DIR:
        sh: |
          echo "{{.TERRAFORM_DIRS}}" | tr ' ' '\n' | gum choose || fzf || (echo "No selection made" && exit 1)
    silent: true

  select-ansible:
    desc: "Select an Ansible folder"
    vars:
      SELECTED_DIR:
        sh: |
          echo "{{.ANSIBLE_DIRS}}" | tr ' ' '\n' | gum choose || fzf || (echo "No selection made" && exit 1)
    silent: true

  deploy:
    desc: "Deploy Terraform & Ansible"
    cmds:
      - task: select-terraform
      - |
        echo "Applying Terraform in terraform/{{.SELECTED_DIR}}..."
        cd terraform/{{.SELECTED_DIR}} && terraform init && terraform apply -auto-approve && cd - || exit 1
      - task: select-ansible
      - |
        echo "Running Ansible playbook for ansible/{{.SELECTED_DIR}}..."
        ansible-playbook ansible/{{.SELECTED_DIR}}/playbook.yml
    interactive: true

  destroy:
    desc: "Destroy Terraform resources"
    cmds:
      - task: select-terraform
      - |
        echo "Destroying Terraform in terraform/{{.SELECTED_DIR}}..."
        cd terraform/{{.SELECTED_DIR}} && terraform destroy -auto-approve && cd - || exit 1
    interactive: true
